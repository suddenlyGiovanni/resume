{
	"$schema": "https://raw.githubusercontent.com/denoland/deno/refs/heads/main/cli/schemas/config-file.v1.json",
	"compilerOptions": {
		"allowUnreachableCode": false,
		"allowUnusedLabels": false,
		"checkJs": true,
		"exactOptionalPropertyTypes": true,
		"noFallthroughCasesInSwitch": true,
		"noImplicitOverride": true,
		"noImplicitReturns": true,
		"noPropertyAccessFromIndexSignature": true,
		"noUncheckedIndexedAccess": true,
		"noUnusedLocals": true,
		"noUnusedParameters": true,
		"strict": true,
		"types": ["node"]
	},
	"license": "UNLICENSED",
	"lock": {
		"frozen": true,
		"lockfile": "deno.lock"
	},
	"nodeModulesDir": "auto",
	"workspace": ["./packages/resume", "./packages/schema-resume"],
	"fmt": {
		"semiColons": false,
		"useTabs": true,
		"singleQuote": true,
		"indentWidth": 2,
		"lineWidth": 100,
		"proseWrap": "never"
	},
	"tasks": {
		"changeset:add": {
			"command": "changeset add",
			"description": "This command will ask you a series of questions, first about what packages you want to release, then what semver bump type for each package, then it will ask for a summary of the entire changeset. The final step will show the changeset it will generate and confirm that you want to add it. Once confirmed, the changeset will be written as a Markdown file that contains the summary and YAML front matter which stores the packages that will be released and the semver bump types for them."
		},
		"changeset:empty": {
			"command": "changeset add --empty",
			"description": "allows you to create an empty changeset if no packages are being bumped, usually only required if you have CI that blocks merges without a changeset."
		},
		"changeset:status": {
			"command": "changeset status",
			"description": "The status command provides information about the changesets that currently exist. If there are no changesets present, it exits with an error status code."
		},
		"changeset:version": {
			"command": "changeset version",
			"description": "The version command takes changesets that have been made and updates versions and dependencies of packages, as well as writing changelogs. It is responsible for all file changes to versions before publishing to npm."
		},
		"test:all": "vitest"
	}
}
